// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Appointment {
  id        Int      @id @default(autoincrement())
  date      DateTime
  client    String
  createdAt DateTime @default(now())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  name         String
  password     String
  phone        String?
  appointments Appointment[]
  profile      Profile?
  refreshTokens RefreshToken[]
  // Champs profil SaaS (migr√©s dans Profile)
  // fullName     String?
  // profession   String?
  // company      String?
  // address      String?
  // website      String?
  // bio          String?   @db.VarChar(500)
  // avatar       String?
}

model Profile {
  id          Int     @id @default(autoincrement())
  user        User    @relation(fields: [userId], references: [id])
  userId      Int     @unique
  fullName    String?
  profession  String?
  company     String?
  address     String?
  website     String?
  bio         String?   @db.VarChar(500)
  avatar      String?
}

model RefreshToken {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  createdAt  DateTime @default(now())
  expiresAt  DateTime
  revokedAt  DateTime?
}
